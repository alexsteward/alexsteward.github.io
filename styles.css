/* Modern Base styles with updated variables */
:root {
  /* Modern color palette */
  --primary: #6366f1;
  --primary-light: #818cf8;
  --primary-dark: #4f46e5;
  --secondary: #f43f5e;
  --dark: #0f172a;
  --light: #f8fafc;
  --gray: #64748b;
  --success: #10b981;
  --warning: #f59e0b;
  --danger: #ef4444;
  
  /* Modern gradients */
  --gradient-primary: linear-gradient(135deg, #6366f1, #2dd4bf);
  --gradient-secondary: linear-gradient(135deg, #f43f5e, #fb923c);
  --gradient-cool: linear-gradient(135deg, #3b82f6, #8b5cf6);
  
  /* Enhanced shadows with color */
  --shadow-sm: 0 2px 8px rgba(99, 102, 241, 0.1);
  --shadow-md: 0 4px 12px rgba(99, 102, 241, 0.12);
  --shadow-lg: 0 10px 25px rgba(99, 102, 241, 0.15);
  --shadow-glow: 0 5px 30px rgba(99, 102, 241, 0.4);
  
  /* Animations */
  --transition-fast: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  --transition-slow: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  
  /* Modern border radius */
  --border-radius-sm: 8px;
  --border-radius-md: 12px;
  --border-radius-lg: 20px;
  --border-radius-xl: 30px;
  --border-radius-full: 9999px;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Inter', 'Segoe UI', system-ui, -apple-system, sans-serif;
}

html {
  scroll-behavior: smooth;
  scroll-padding-top: 80px;
}

body {
  background-color: var(--light);
  color: var(--dark);
  line-height: 1.7;
  font-size: 16px;
  overflow-x: hidden;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  position: relative;
  z-index: 2;
}

section {
  padding: 120px 0;
  position: relative;
  overflow: hidden;
}

/* Enhanced Typography */
h1, h2, h3, h4, h5, h6 {
  line-height: 1.3;
  margin-bottom: 20px;
  font-weight: 700;
}

h1 {
  font-size: clamp(2.5rem, 5vw, 4rem);
}

h2 {
  font-size: clamp(2rem, 4vw, 3rem);
}

p {
  margin-bottom: 20px;
}

.gradient-text {
  background: var(--gradient-primary);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
  display: inline-block;
  position: relative;
  animation: gradientShift 5s ease infinite;
}

@keyframes gradientShift {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

.subheading {
  display: inline-block;
  font-size: 0.9rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 2px;
  color: var(--primary);
  margin-bottom: 15px;
  position: relative;
  padding-left: 30px;
}

.subheading:before {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  width: 20px;
  height: 2px;
  background: var(--primary);
  transform: translateY(-50%);
  animation: expandWidth 3s ease-in-out infinite;
}

@keyframes expandWidth {
  0%, 100% { width: 20px; }
  50% { width: 25px; }
}

/* Modern Header & Navigation */
header {
  position: fixed;
  width: 100%;
  top: 0;
  left: 0;
  padding: 20px 0;
  z-index: 1000;
  transition: var(--transition);
}

header.scrolled {
  background: rgba(248, 250, 252, 0.8);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  box-shadow: var(--shadow-md);
  padding: 15px 0;
}

.glass-nav {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--border-radius-md);
}

nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logo {
  display: flex;
  align-items: center;
}

.logo-icon {
  background: var(--gradient-primary);
  color: white;
  width: 40px;
  height: 40px;
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 10px;
  font-size: 1.2rem;
  box-shadow: var(--shadow-glow);
  position: relative;
  overflow: hidden;
  animation: pulse 3s ease-in-out infinite;
}

.logo-icon:before {
  content: "";
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: rgba(255, 255, 255, 0.1);
  transform: rotate(45deg);
  animation: shimmer 3s linear infinite;
}

@keyframes shimmer {
  0% { transform: translateX(-100%) rotate(45deg); }
  100% { transform: translateX(100%) rotate(45deg); }
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

.logo-text {
  font-size: 24px;
  font-weight: 700;
  color: var(--dark);
  transition: var(--transition);
  position: relative;
}

.nav-links {
  display: flex;
  list-style: none;
}

.nav-links li {
  margin-left: 30px;
}

.nav-links a {
  color: var(--dark);
  text-decoration: none;
  font-weight: 500;
  position: relative;
  padding: 5px 3px;
  transition: var(--transition);
}

.nav-links a:after {
  content: '';
  position: absolute;
  width: 0;
  height: 2px;
  bottom: 0;
  left: 0;
  background: var(--gradient-primary);
  transition: width 0.3s ease;
}

.nav-links a:hover {
  color: var(--primary);
}

.nav-links a:hover:after {
  width: 100%;
}

/* Advanced button animations */
.cta-button {
  display: inline-flex;
  align-items: center;
  background: var(--gradient-primary);
  background-size: 200% auto;
  color: white;
  padding: 14px 30px;
  border-radius: var(--border-radius-full);
  text-decoration: none;
  font-weight: 600;
  font-size: 1rem;
  transition: var(--transition);
  border: none;
  cursor: pointer;
  box-shadow: var(--shadow-md);
  position: relative;
  overflow: hidden;
  z-index: 1;
  animation: gradientMove 3s ease infinite;
}

@keyframes gradientMove {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.cta-button:before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.2);
  transition: var(--transition-fast);
  z-index: -1;
  transform: skewX(-15deg);
}

.cta-button:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-glow);
}

.cta-button:hover:before {
  left: 100%;
}

.cta-button i {
  margin-left: 10px;
  transition: var(--transition);
}

.cta-button:hover i {
  transform: translateX(5px) rotate(5deg);
}

/* Enhanced Hero Section */
.hero {
  height: 100vh;
  min-height: 700px;
  background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
  color: white;
  display: flex;
  align-items: center;
  position: relative;
}

.hero-content {
  max-width: 650px;
  position: relative;
  z-index: 2;
  animation: fadeInUp 1s ease forwards;
  opacity: 0;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.hero h1 {
  font-size: clamp(2.5rem, 5vw, 4rem);
  margin-bottom: 25px;
  line-height: 1.2;
}

.hero p {
  font-size: 1.2rem;
  margin-bottom: 35px;
  opacity: 0.9;
  color: rgba(255, 255, 255, 0.9);
}

.hero-shape {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 150px;
  background: var(--light);
  clip-path: polygon(0 100%, 100% 100%, 100% 0);
}

/* Enhanced Particle animation */
.particle {
  position: absolute;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  z-index: 0;
}

.particle-1 {
  width: 300px;
  height: 300px;
  top: -100px;
  right: 10%;
  background: radial-gradient(circle, rgba(99, 102, 241, 0.3) 0%, rgba(99, 102, 241, 0) 70%);
  animation: floatParticle 15s ease-in-out infinite;
}

.particle-2 {
  width: 200px;
  height: 200px;
  bottom: 10%;
  left: 5%;
  background: radial-gradient(circle, rgba(99, 102, 241, 0.2) 0%, rgba(99, 102, 241, 0) 70%);
  animation: floatParticle 18s ease-in-out infinite reverse;
}

.particle-3 {
  width: 150px;
  height: 150px;
  top: 40%;
  left: 20%;
  background: radial-gradient(circle, rgba(244, 63, 94, 0.2) 0%, rgba(244, 63, 94, 0) 70%);
  animation: floatParticle 20s ease-in-out infinite;
}

.particle-4 {
  width: 100px;
  height: 100px;
  top: 20%;
  right: 30%;
  background: radial-gradient(circle, rgba(244, 63, 94, 0.15) 0%, rgba(244, 63, 94, 0) 70%);
  animation: floatParticle 25s ease-in-out infinite reverse;
}

@keyframes floatParticle {
  0% {
    transform: translateY(0) rotate(0deg) scale(1);
  }
  50% {
    transform: translateY(-30px) rotate(5deg) scale(1.05);
  }
  100% {
    transform: translateY(0) rotate(0deg) scale(1);
  }
}

/* Add cool cursor effect */
.cursor-effect {
  width: 20px;
  height: 20px;
  border: 2px solid var(--primary);
  border-radius: 50%;
  position: fixed;
  z-index: 9999;
  pointer-events: none;
  transform: translate(-50%, -50%);
  transition: width 0.2s, height 0.2s;
  display: none;
}

.cursor-effect.active {
  width: 50px;
  height: 50px;
  border-width: 1px;
}

/* Modern Services Section */
.services {
  background-color: var(--light);
  position: relative;
}

.services:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%236366f1' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

.section-heading {
  text-align: center;
  margin-bottom: 60px;
  opacity: 0;
  transform: translateY(30px);
  transition: var(--transition);
}

.section-heading.in-view {
  opacity: 1;
  transform: translateY(0);
}

.section-heading h2 {
  font-size: clamp(2rem, 4vw, 2.5rem);
  margin-bottom: 20px;
  color: var(--dark);
}

.section-heading p {
  max-width: 600px;
  margin: 0 auto;
  color: var(--gray);
}

.services-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 30px;
}

.service-card {
  background: white;
  border-radius: var(--border-radius-lg);
  overflow: hidden;
  box-shadow: var(--shadow-md);
  transition: var(--transition);
  padding: 40px 30px;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  border-bottom: 4px solid transparent;
  position: relative;
  opacity: 0;
  transform: translateY(30px);
  transition-delay: calc(var(--service-index, 0) * 0.1s);
}

.service-card.in-view {
  opacity: 1;
  transform: translateY(0);
}

.service-card:hover {
  transform: translateY(-10px);
  box-shadow: var(--shadow-lg);
  border-bottom: 4px solid var(--primary);
}

.service-card:before {
  content: '';
  position: absolute;
  inset: 0;
  background: var(--gradient-primary);
  opacity: 0;
  z-index: -1;
  transition: var(--transition-slow);
}

.service-card:hover:before {
  opacity: 0.05;
}

.service-icon {
  background: var(--gradient-primary);
  width: 80px;
  height: 80px;
  border-radius: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 25px;
  box-shadow: var(--shadow-md);
  position: relative;
  z-index: 1;
  transition: var(--transition);
  transform: rotate(-5deg);
}

.service-card:hover .service-icon {
  transform: rotate(0deg) scale(1.05);
  box-shadow: var(--shadow-glow);
  border-radius: 50%;
}

.service-icon:before {
  content: '';
  position: absolute;
  inset: 5px;
  border-radius: 15px;
  background: white;
  z-index: -1;
  transition: var(--transition);
}

.service-card:hover .service-icon:before {
  inset: 0;
  opacity: 0;
  border-radius: 50%;
}

.service-icon i {
  font-size: 2rem;
  color: var(--primary);
  transition: var(--transition);
}

.service-card:hover .service-icon i {
  color: white;
  transform: scale(1.1);
}

/* Parallax and enhanced effects */
.parallax-bg {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-size: cover;
  background-position: center;
  opacity: 0.05;
  transform: translateZ(-1px) scale(2);
}

/* About section with enhanced animations */
.about {
  background-color: var(--light);
  position: relative;
}

.about-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  gap: 50px;
  align-items: center;
}

.about-image {
  position: relative;
  opacity: 0;
  transform: translateX(-30px);
  transition: var(--transition);
}

.about-image.in-view {
  opacity: 1;
  transform: translateX(0);
}

.image-container {
  position: relative;
  border-radius: var(--border-radius-lg);
  overflow: hidden;
  box-shadow: var(--shadow-lg);
}

.image-container:before {
  content: '';
  position: absolute;
  inset: 0;
  background: var(--gradient-primary);
  opacity: 0;
  transition: var(--transition);
  z-index: 1;
  mix-blend-mode: overlay;
}

.image-container:hover:before {
  opacity: 0.4;
}

.image-container img {
  width: 100%;
  height: auto;
  display: block;
  transition: var(--transition);
}

.image-container:hover img {
  transform: scale(1.05);
}

.experience-badge {
  position: absolute;
  bottom: -25px;
  right: 30px;
  background: var(--primary);
  color: white;
  padding: 20px;
  border-radius: var(--border-radius-md);
  text-align: center;
  box-shadow: var(--shadow-md);
  animation: floating 5s ease-in-out infinite;
}

@keyframes floating {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

.experience-badge .years {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  line-height: 1;
}

.experience-badge .text {
  font-size: 0.9rem;
  opacity: 0.9;
}

.about-content {
  opacity: 0;
  transform: translateX(30px);
  transition: var(--transition);
}

.about-content.in-view {
  opacity: 1;
  transform: translateX(0);
}

.about-features {
  list-style: none;
  margin-bottom: 30px;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 15px;
}

.about-features li {
  display: flex;
  align-items: center;
  opacity: 0;
  transform: translateY(10px);
  transition: var(--transition);
  transition-delay: calc(var(--feature-index, 0) * 0.1s);
}

.about-features li.in-view {
  opacity: 1;
  transform: translateY(0);
}

.about-features i {
  color: var(--success);
  margin-right: 10px;
  font-size: 1.2rem;
}

/* Contact Section with enhanced effects */
.contact {
  background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
  color: white;
  position: relative;
  overflow: hidden;
}

.contact:before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.03'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm23-3c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

/* Contact form with animated focus effects */
.contact-form {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: var(--border-radius-lg);
  padding: 40px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: var(--shadow-lg);
  position: relative;
}

.contact-form:after {
  content: '';
  position: absolute;
  inset: 0;
  background: var(--gradient-primary);
  border-radius: var(--border-radius-lg);
  z-index: -1;
  opacity: 0.1;
  filter: blur(20px);
}

.form-group {
  margin-bottom: 20px;
  position: relative;
}

.form-control {
  width: 100%;
  padding: 16px;
  font-size: 1rem;
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--border-radius-md);
  color: white;
  transition: var(--transition);
  overflow: hidden;
}

.form-control:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.3);
  background: rgba(255, 255, 255, 0.1);
}

.form-control::placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.form-label {
  position: absolute;
  left: 16px;
  top: 16px;
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.5);
  pointer-events: none;
  transition: var(--transition-fast);
}

.form-control:focus + .form-label,
.form-control:not(:placeholder-shown) + .form-label {
  transform: translateY(-25px) scale(0.8);
  color: var(--primary);
}

.submit-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: var(--gradient-primary);
  background-size: 200% auto;
  color: white;
  border: none;
  padding: 16px 30px;
  border-radius: var(--border-radius-full);
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  transition: var(--transition);
  box-shadow: var(--shadow-md);
  width: 100%;
  position: relative;
  overflow: hidden;
  animation: gradientMove 3s ease infinite;
}

.submit-btn:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow-glow);
}

.submit-btn:before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.2);
  transition: var(--transition-fast);
  transform: skewX(-15deg);
}

.submit-btn:hover:before {
  left: 100%;
}

.submit-btn i {
  margin-left: 10px;
  transition: var(--transition);
}

.submit-btn:hover i {
  transform: translateX(5px) rotate(5deg);
}

/* Add scroll animation trigger JS */
document.addEventListener('DOMContentLoaded', function() {
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('in-view');
      }
    });
  }, {
    threshold: 0.1
  });
  
  // Observe section headings
  document.querySelectorAll('.section-heading').forEach(el => {
    observer.observe(el);
  });
  
  // Observe service cards and add index for staggered animation
  document.querySelectorAll('.service-card').forEach((el, index) => {
    el.style.setProperty('--service-index', index);
    observer.observe(el);
  });
  
  // Observe about sections
  document.querySelectorAll('.about-image, .about-content').forEach(el => {
    observer.observe(el);
  });
  
  // Observe about features and add index for staggered animation
  document.querySelectorAll('.about-features li').forEach((el, index) => {
    el.style.setProperty('--feature-index', index);
    observer.observe(el);
  });
  
  // Custom cursor effect
  const cursor = document.createElement('div');
  cursor.classList.add('cursor-effect');
  document.body.appendChild(cursor);
  
  document.addEventListener('mousemove', (e) => {
    cursor.style.display = 'block';
    cursor.style.left = e.clientX + 'px';
    cursor.style.top = e.clientY + 'px';
  });
  
  document.addEventListener('mousedown', () => {
    cursor.classList.add('active');
  });
  
  document.addEventListener('mouseup', () => {
    cursor.classList.remove('active');
  });
  
  // Header scroll effect
  window.addEventListener('scroll', () => {
    const header = document.querySelector('header');
    if (window.scrollY > 100) {
      header.classList.add('scrolled');
    } else {
      header.classList.remove('scrolled');
    }
  });
});

/* Media Queries for Responsive Design - Improved & Completed */
@media (max-width: 768px) {
  .about-grid,
  .services-grid {
    grid-template-columns: 1fr;
  }
  
  .about-features {
    grid-template-columns: 1fr;
  }
  
  .nav-links {
    position: fixed;
    top: 0;
    right: -300px;
    width: 300px;
    height: 100vh;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    transition: var(--transition);
    box-shadow: var(--shadow-lg);
    z-index: 1001;
  }
  
  .nav-links.active {
    right: 0;
  }
  
  .nav-links li {
    margin: 15px 0;
  }
  
  .nav-toggle {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 21px;
    cursor: pointer;
    z-index: 1002;
    position: relative;
  }
  
  .nav-toggle span {
    display: block;
    width: 100%;
    height: 3px;
    background: var(--dark);
    border-radius: 3px;
    transition: var(--transition);
  }
  
  .nav-toggle.active span:nth-child(1) {
    transform: translateY(9px) rotate(45deg);
  }
  
  .nav-toggle.active span:nth-child(2) {
    opacity: 0;
  }
  
  .nav-toggle.active span:nth-child(3) {
    transform: translateY(-9px) rotate(-45deg);
  }
  
  .hero-content {
    padding-top: 80px;
  }
}

/* Advanced Footer with animated elements */
footer {
  background: var(--dark);
  color: white;
  padding: 80px 0 30px;
  position: relative;
  overflow: hidden;
}

.footer-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 40px;
  margin-bottom: 60px;
}

.footer-col h4 {
  position: relative;
  font-size: 1.2rem;
  margin-bottom: 25px;
  padding-bottom: 10px;
}

.footer-col h4:after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 40px;
  height: 2px;
  background: var(--gradient-primary);
}

.footer-links {
  list-style: none;
}

.footer-links li {
  margin-bottom: 12px;
}

.footer-links a {
  color: rgba(255, 255, 255, 0.7);
  text-decoration: none;
  transition: var(--transition-fast);
  display: inline-flex;
  align-items: center;
}

.footer-links a:before {
  content: '→';
  opacity: 0;
  margin-right: 0;
  transform: translateX(-10px);
  transition: var(--transition-fast);
}

.footer-links a:hover {
  color: white;
  transform: translateX(5px);
}

.footer-links a:hover:before {
  opacity: 1;
  margin-right: 8px;
  transform: translateX(0);
}

.social-links {
  display: flex;
  gap: 15px;
  margin-top: 20px;
}

.social-icon {
  width: 40px;
  height: 40px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 1.2rem;
  transition: var(--transition);
  position: relative;
  overflow: hidden;
}

.social-icon:before {
  content: '';
  position: absolute;
  inset: 0;
  background: var(--gradient-primary);
  opacity: 0;
  transition: var(--transition);
  transform: scale(0);
  border-radius: 50%;
}

.social-icon:hover {
  transform: translateY(-5px) rotate(10deg);
}

.social-icon:hover:before {
  opacity: 1;
  transform: scale(1);
}

.social-icon i {
  position: relative;
  z-index: 1;
}

.copyright {
  text-align: center;
  padding-top: 30px;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.9rem;
}

.footer-wave {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  overflow: hidden;
  line-height: 0;
}

.footer-wave svg {
  position: relative;
  display: block;
  width: calc(100% + 1.3px);
  height: 80px;
}

.footer-wave .shape-fill {
  fill: var(--light);
}

/* Testimonials section with modern card animations */
.testimonials {
  background-color: #f1f5f9;
  position: relative;
  overflow: hidden;
}

.testimonial-slider {
  position: relative;
  overflow: hidden;
}

.testimonial-track {
  display: flex;
  transition: transform 0.5s ease;
}

.testimonial-card {
  min-width: 350px;
  background: white;
  border-radius: var(--border-radius-lg);
  padding: 30px;
  margin: 15px;
  box-shadow: var(--shadow-md);
  border-bottom: 4px solid transparent;
  transition: var(--transition);
  position: relative;
  opacity: 0;
  transform: translateY(30px);
}

.testimonial-card.in-view {
  opacity: 1;
  transform: translateY(0);
}

.testimonial-card:hover {
  transform: translateY(-10px);
  box-shadow: var(--shadow-lg);
  border-bottom: 4px solid var(--primary);
}

.testimonial-card:before {
  content: '"';
  position: absolute;
  top: -20px;
  left: 20px;
  font-size: 100px;
  color: var(--primary-light);
  opacity: 0.1;
  font-family: serif;
  z-index: 0;
}

.testimonial-content {
  position: relative;
  z-index: 1;
}

.testimonial-text {
  margin-bottom: 20px;
  color: var(--gray);
  font-style: italic;
}

.testimonial-author {
  display: flex;
  align-items: center;
}

.author-avatar {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  overflow: hidden;
  margin-right: 15px;
  background: var(--gradient-primary);
  box-shadow: var(--shadow-md);
}

.author-avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  mix-blend-mode: luminosity;
  transition: var(--transition);
}

.testimonial-card:hover .author-avatar img {
  mix-blend-mode: normal;
}

.author-info h5 {
  margin: 0;
  font-size: 1.1rem;
}

.author-info span {
  font-size: 0.9rem;
  color: var(--gray);
}

.testimonial-dots {
  display: flex;
  justify-content: center;
  margin-top: 30px;
}

.dot {
  width: 12px;
  height: 12px;
  margin: 0 5px;
  border-radius: 50%;
  background: rgba(99, 102, 241, 0.2);
  cursor: pointer;
  transition: var(--transition);
}

.dot.active {
  background: var(--primary);
  transform: scale(1.3);
}

/* Portfolio/Work section with hover effects */
.portfolio {
  background-color: var(--light);
  position: relative;
}

.portfolio-filter {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  margin-bottom: 40px;
}

.filter-btn {
  padding: 8px 20px;
  margin: 5px;
  background: transparent;
  border: 1px solid var(--primary-light);
  border-radius: var(--border-radius-full);
  color: var(--dark);
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
}

.filter-btn:hover, .filter-btn.active {
  background: var(--gradient-primary);
  color: white;
  border-color: transparent;
  box-shadow: var(--shadow-md);
}

.portfolio-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 25px;
}

.portfolio-item {
  border-radius: var(--border-radius-lg);
  overflow: hidden;
  position: relative;
  box-shadow: var(--shadow-md);
  transform-style: preserve-3d;
  perspective: 1000px;
  opacity: 0;
  transform: translateY(30px);
  transition: var(--transition);
  transition-delay: calc(var(--item-index, 0) * 0.1s);
}

.portfolio-item.in-view {
  opacity: 1;
  transform: translateY(0);
}

.portfolio-img {
  width: 100%;
  height: 250px;
  object-fit: cover;
  display: block;
  transition: var(--transition);
}

.portfolio-overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(to bottom, rgba(15, 23, 42, 0.2), rgba(15, 23, 42, 0.9));
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  padding: 25px;
  opacity: 0;
  transform: rotateX(-20deg);
  transform-origin: bottom;
  transition: var(--transition);
}

.portfolio-item:hover .portfolio-overlay {
  opacity: 1;
  transform: rotateX(0);
}

.portfolio-item:hover .portfolio-img {
  transform: scale(1.1);
}

.portfolio-category {
  font-size: 0.8rem;
  color: var(--primary-light);
  margin-bottom: 5px;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.portfolio-title {
  color: white;
  margin: 0;
  font-size: 1.2rem;
}

.portfolio-link {
  position: absolute;
  top: 20px;
  right: 20px;
  width: 40px;
  height: 40px;
  background: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transform: translateY(20px) rotate(-45deg);
  opacity: 0;
  transition: var(--transition-slow);
}

.portfolio-item:hover .portfolio-link {
  transform: translateY(0) rotate(0);
  opacity: 1;
}

/* FAQ Section with accordion animations */
.faq {
  background: var(--light);
  position: relative;
}

.accordion-item {
  background: white;
  border-radius: var(--border-radius-md);
  margin-bottom: 15px;
  overflow: hidden;
  box-shadow: var(--shadow-sm);
  opacity: 0;
  transform: translateY(20px);
  transition: var(--transition);
  transition-delay: calc(var(--accordion-index, 0) * 0.1s);
}

.accordion-item.in-view {
  opacity: 1;
  transform: translateY(0);
}

.accordion-header {
  padding: 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
  position: relative;
  transition: var(--transition);
}

.accordion-header:hover {
  background: rgba(99, 102, 241, 0.05);
}

.accordion-title {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 600;
}

.accordion-icon {
  width: 22px;
  height: 22px;
  border-radius: 50%;
  background: var(--primary-light);
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--transition);
  position: relative;
}

.accordion-icon:before, .accordion-icon:after {
  content: '';
  position: absolute;
  background: white;
  transition: var(--transition);
}

.accordion-icon:before {
  width: 10px;
  height: 2px;
}

.accordion-icon:after {
  width: 2px;
  height: 10px;
}

.accordion-item.active .accordion-icon {
  transform: rotate(45deg);
  background: var(--secondary);
}

.accordion-content {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease;
}

.accordion-inner {
  padding: 0 20px 20px;
  color: var(--gray);
}

/* Stats Section with counter animations */
.stats {
  background: var(--gradient-primary);
  color: white;
  padding: 100px 0;
  position: relative;
  overflow: hidden;
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 30px;
  text-align: center;
}

.stat-item {
  opacity: 0;
  transform: translateY(20px);
  transition: var(--transition);
  transition-delay: calc(var(--stat-index, 0) * 0.1s);
}

.stat-item.in-view {
  opacity: 1;
  transform: translateY(0);
}

.stat-value {
  font-size: 3rem;
  font-weight: 700;
  line-height: 1;
  margin-bottom: 10px;
  position: relative;
  display: inline-block;
}

.stat-value:after {
  content: '+';
  font-size: 1.5rem;
  position: absolute;
  top: 5px;
  right: -15px;
}

.stat-label {
  font-size: 1rem;
  opacity: 0.9;
}

.stat-icon {
  margin-bottom: 15px;
  width: 50px;
  height: 50px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  margin: 0 auto 15px;
  position: relative;
  overflow: hidden;
}

.stat-icon:before {
  content: '';
  position: absolute;
  inset: 0;
  background: white;
  opacity: 0;
  transition: var(--transition);
}

.stat-item:hover .stat-icon:before {
  opacity: 0.3;
}

/* Call to action section with enhanced animation */
.cta {
  padding: 100px 0;
  background: var(--dark);
  color: white;
  text-align: center;
  position: relative;
  overflow: hidden;
}

.cta-content {
  max-width: 700px;
  margin: 0 auto;
  position: relative;
  z-index: 1;
}

.cta h2 {
  font-size: clamp(2rem, 5vw, 3rem);
  margin-bottom: 20px;
}

.cta-buttons {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin-top: 40px;
  flex-wrap: wrap;
}

.cta-gradient-bg {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: radial-gradient(circle, rgba(79, 70, 229, 0.2) 0%, rgba(15, 23, 42, 0) 70%);
  animation: pulseGradient 8s ease infinite;
}

@keyframes pulseGradient {
  0%, 100% { transform: scale(1); opacity: 0.2; }
  50% { transform: scale(1.5); opacity: 0.3; }
}

.btn-outline {
  display: inline-flex;
  align-items: center;
  background: transparent;
  color: white;
  padding: 14px 30px;
  border-radius: var(--border-radius-full);
  text-decoration: none;
  font-weight: 600;
  font-size: 1rem;
  transition: var(--transition);
  border: 2px solid rgba(255, 255, 255, 0.2);
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.btn-outline:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  transition: var(--transition);
  z-index: -1;
}

.btn-outline:hover {
  border-color: white;
  transform: translateY(-5px);
}

.btn-outline:hover:before {
  width: 100%;
}

.btn-outline i {
  margin-left: 10px;
  transition: var(--transition);
}

.btn-outline:hover i {
  transform: translateX(5px);
}

/* Preloader animation */
.preloader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--dark);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  transition: opacity 0.6s ease, visibility 0.6s ease;
}

.preloader.loaded {
  opacity: 0;
  visibility: hidden;
}

.loader {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  border: 3px solid rgba(255, 255, 255, 0.1);
  border-left: 3px solid var(--primary);
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Enhanced scroll to top button with animation */
.scroll-top {
  position: fixed;
  bottom: -60px;
  right: 30px;
  width: 50px;
  height: 50px;
  background: var(--gradient-primary);
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: var(--shadow-md);
  transition: var(--transition);
  z-index: 99;
  opacity: 0;
}

.scroll-top.show {
  bottom: 30px;
  opacity: 1;
}

.scroll-top:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-glow);
}

/* Add 3D tilt effect */
.tilt-element {
  transform-style: preserve-3d;
  perspective: 1000px;
}

.tilt-inner {
  transition: var(--transition);
}

/* Additional animations and JavaScript for the enhanced features */
document.addEventListener('DOMContentLoaded', function() {
  // Preloader
  const preloader = document.querySelector('.preloader');
  if (preloader) {
    window.addEventListener('load', () => {
      preloader.classList.add('loaded');
    });
  }
  
  // Scroll to top button
  const scrollTopBtn = document.querySelector('.scroll-top');
  if (scrollTopBtn) {
    window.addEventListener('scroll', () => {
      if (window.scrollY > 300) {
        scrollTopBtn.classList.add('show');
      } else {
        scrollTopBtn.classList.remove('show');
      }
    });
    
    scrollTopBtn.addEventListener('click', () => {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    });
  }
  
  // Mobile navigation toggle
  const navToggle = document.querySelector('.nav-toggle');
  const navLinks = document.querySelector('.nav-links');
  
  if (navToggle && navLinks) {
    navToggle.addEventListener('click', () => {
      navToggle.classList.toggle('active');
      navLinks.classList.toggle('active');
    });
  }
  
  // Accordion functionality
  const accordionItems = document.querySelectorAll('.accordion-item');
  
  accordionItems.forEach((item, index) => {
    item.style.setProperty('--accordion-index', index);
    const header = item.querySelector('.accordion-header');
    const content = item.querySelector('.accordion-content');
    const inner = item.querySelector('.accordion-inner');
    
    observer.observe(item);
    
    header.addEventListener('click', () => {
      // Close all other accordion items
      accordionItems.forEach(otherItem => {
        if (otherItem !== item) {
          otherItem.classList.remove('active');
          otherItem.querySelector('.accordion-content').style.maxHeight = null;
        }
      });
      
      // Toggle current item
      item.classList.toggle('active');
      if (item.classList.contains('active')) {
        content.style.maxHeight = inner.scrollHeight + 'px';
      } else {
        content.style.maxHeight = null;
      }
    });
  });
  
  // Testimonial slider
  const testimonialTrack = document.querySelector('.testimonial-track');
  const testimonialCards = document.querySelectorAll('.testimonial-card');
  const dots = document.querySelectorAll('.dot');
  
  if (testimonialTrack && testimonialCards.length > 0 && dots.length > 0) {
    let currentSlide = 0;
    
    // Observe testimonial cards
    testimonialCards.forEach(card => {
      observer.observe(card);
    });
    
    // Set up dots
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        moveToSlide(index);
      });
    });
    
    function moveToSlide(index) {
      testimonialTrack.style.transform = `translateX(-${index * 100}%)`;
      
      // Update active dot
      dots.forEach(dot => dot.classList.remove('active'));
      dots[index].classList.add('active');
      
      currentSlide = index;
    }
    
    // Auto slide (optional)
    setInterval(() => {
      currentSlide = (currentSlide + 1) % testimonialCards.length;
      moveToSlide(currentSlide);
    }, 5000);
  }
  
  // Portfolio filter
  const filterBtns = document.querySelectorAll('.filter-btn');
  const portfolioItems = document.querySelectorAll('.portfolio-item');
  
  if (filterBtns.length > 0 && portfolioItems.length > 0) {
    // Observe portfolio items
    portfolioItems.forEach((item, index) => {
      item.style.setProperty('--item-index', index);
      observer.observe(item);
    });
    
    filterBtns.forEach(btn => {
      btn.addEventListener('click', () => {
        // Remove active class from all buttons
        filterBtns.forEach(b => b.classList.remove('active'));
        
        // Add active class to current button
        btn.classList.add('active');
        
        const filter = btn.getAttribute('data-filter');
        
        portfolioItems.forEach(item => {
          if (filter === 'all' || item.classList.contains(filter)) {
            item.style.display = 'block';
            setTimeout(() => {
              item.style.opacity = '1';
              item.style.transform = 'translateY(0)';
            }, 100);
          } else {
            item.style.opacity = '0';
            item.style.transform = 'translateY(20px)';
            setTimeout(() => {
              item.style.display = 'none';
            }, 500);
          }
        });
      });
    });
  }
  
  // Stats counter animation
  const statItems = document.querySelectorAll('.stat-item');
  const statValues = document.querySelectorAll('.stat-value');
  
  if (statItems.length > 0) {
    statItems.forEach((item, index) => {
      item.style.setProperty('--stat-index', index);
      observer.observe(item);
    });
    
    let hasAnimated = false;
    
    // New intersection observer specifically for stats section
    const statsObserver = new IntersectionObserver((entries) => {
      if (entries[0].isIntersecting && !hasAnimated) {
        hasAnimated = true;
        
        statValues.forEach(valueElement => {
          const targetValue = parseInt(valueElement.getAttribute('data-value'));
          let currentValue = 0;
          const duration = 2000; // ms
          const increment = Math.ceil(targetValue / (duration / 16));
          
          const counter = setInterval(() => {
            currentValue += increment;
            if (currentValue >= targetValue) {
              valueElement.textContent = targetValue;
              clearInterval(counter);
            } else {
              valueElement.textContent = currentValue;
            }
          }, 16);
        });
      }
    }, { threshold: 0.5 });
    
    const statsSection = document.querySelector('.stats');
    if (statsSection) {
      statsObserver.observe(statsSection);
    }
  }
  
  // 3D tilt effect
  const tiltElements = document.querySelectorAll('.tilt-element');
  
  tiltElements.forEach(element => {
    const inner = element.querySelector('.tilt-inner');
    
    element.addEventListener('mousemove', e => {
      const rect = element.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      
      const xPercent = x / rect.width;
      const yPercent = y / rect.height;
      
      const xRotation = (yPercent - 0.5) * -10; // -5 to 5 degrees
      const yRotation = (xPercent - 0.5) * 10; // -5 to 5 degrees
      
      inner.style.transform = `perspective(1000px) rotateX(${xRotation}deg) rotateY(${yRotation}deg) scale3d(1.05, 1.05, 1.05)`;
    });
    
    element.addEventListener('mouseleave', () => {
      inner.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) scale3d(1, 1, 1)';
    });
  });
  
  // Parallax effect on scroll
  window.addEventListener('scroll', () => {
    const parallaxElements = document.querySelectorAll('[data-parallax]');
    
    parallaxElements.forEach(element => {
      const speed = element.getAttribute('data-parallax') || 0.2;
      const offset = window.scrollY * speed;
      element.style.transform = `translateY(${offset}px)`;
    });
  });
  
  // More advanced cursor effect with magnetic pull
  const magneticElements = document.querySelectorAll('[data-magnetic]');
  
  magneticElements.forEach(element => {
    element.addEventListener('mousemove', e => {
      const rect = element.getBoundingClientRect();
      const x = e.clientX - rect.left - rect.width / 2;
      const y = e.clientY - rect.top - rect.height / 2;
      
      element.style.transform = `translate(${x * 0.2}px, ${y * 0.2}px)`;
    });
    
    element.addEventListener('mouseleave', () => {
      element.style.transform = 'translate(0, 0)';
    });
  });
});

/* Advanced Text Animation */
const textElements = document.querySelectorAll('[data-text-animate]');

textElements.forEach(element => {
  const text = element.textContent;
  element.textContent = '';
  
  for (let i = 0; i < text.length; i++) {
    const span = document.createElement('span');
    span.textContent = text[i] === ' ' ? ' ' : text[i];
    span.style.animationDelay = `${i * 0.05}s`;
    element.appendChild(span);
  }
});

/* Add smooth page transitions */
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
  anchor.addEventListener('click', function(e) {
    e.preventDefault();
    const target = document.querySelector(this.getAttribute('href'));
    if (target) {
      window.scrollTo({
        top: target.offsetTop - 80,
        behavior: 'smooth'
      });
    }
  });
});

/* Scroll reveal animation for background elements */
window.addEventListener('scroll', () => {
  const scrolled = window.scrollY;
  document.querySelectorAll('.bg-parallax').forEach(element => {
    const speed = element.dataset.speed || 0.5;
    element.style.transform = `translateY(${scrolled * speed}px)`;
  });
});

/* Add particle animation */
function createParticle(container, count) {
  for (let i = 0; i < count; i++) {
    const particle = document.createElement('div');
    particle.className = 'floating-particle';
    
    const size = Math.random() * 10 + 5;
    const posX = Math.random() * 100;
    const posY = Math.random() * 100;
    const duration = Math.
